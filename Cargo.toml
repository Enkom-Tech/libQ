# Workspace configuration - uncomment when workspace members are created
[workspace]
members = [
    "lib-q-core",
    "lib-q-kem",
    "lib-q-sig", 
    "lib-q-hash",
    "lib-q-aead",
    "lib-q-utils",
    "lib-q-zkp",
    "lib-q-sponge",
    "examples",
    "."
]

[package]
name = "lib-q"
version = "0.0.1"
edition = "2021"
authors = ["lib-Q Contributors"]
description = "Post-quantum cryptography library with libsodium-equivalent API (complete package)"
license = "Apache-2.0"
repository = "https://github.com/Enkom-Tech/libQ"
keywords = ["cryptography", "post-quantum", "security", "wasm"]
categories = ["cryptography", "wasm"]
readme = "README.md"

[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[lib]
name = "libq"
path = "lib.rs"
crate-type = ["cdylib", "rlib"]

[dependencies]
# Core dependencies
lib-q-core = { path = "lib-q-core" }
lib-q-kem = { path = "lib-q-kem" }
lib-q-sig = { path = "lib-q-sig" }
lib-q-hash = { path = "lib-q-hash" }
lib-q-aead = { path = "lib-q-aead" }
lib-q-utils = { path = "lib-q-utils" }
lib-q-zkp = { path = "lib-q-zkp" }

# WASM-specific dependencies
wasm-bindgen = { version = "0.2.100", optional = true }
js-sys = { version = "0.3.77", optional = true }
web-sys = { version = "0.3.77", optional = true, features = ["console"] }

[dev-dependencies]
# Testing
criterion = "0.7.0"
proptest = "1.7.0"
quickcheck = "1.0.3"

# WASM testing
wasm-bindgen-test = "0.3.50"

[features]
default = ["std"]
std = []
alloc = []
no_std = []

# WASM features
wasm = ["wasm-bindgen", "js-sys", "web-sys"]

# Re-export features from individual crates
kyber = ["lib-q-kem/kyber"]
dilithium = ["lib-q-sig/dilithium"]
falcon = ["lib-q-sig/falcon"]
sphincs = ["lib-q-sig/sphincs"]
mceliece = ["lib-q-kem/mceliece"]
hqc = ["lib-q-kem/hqc"]
zkp = ["lib-q-zkp/zkp"]

# Convenience features
all-algorithms = ["kyber", "dilithium", "falcon", "sphincs", "mceliece", "hqc", "zkp"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true

[profile.bench]
opt-level = 3
lto = true
codegen-units = 1

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]




